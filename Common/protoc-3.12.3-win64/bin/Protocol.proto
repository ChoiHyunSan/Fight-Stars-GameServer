syntax = "proto3";

package Protocol;
import "google/protobuf/timestamp.proto";
option csharp_namespace = "Google.Protobuf.Protocol";

enum MsgId {
  C_ENTER_ROOM = 0;
  S_ENTER_ROOM = 1;
  C_READY_COMPLETE_GAME = 2;
  S_READY_COMPLETE_GAME = 3;
  C_MOVE = 4;
  S_POSITION_UPDATE = 5;
  C_FIRE = 6;
  S_FIRE = 7;
  S_ATTACK = 8;
  S_DIE = 9;
  S_RESPAWN = 10;
  S_DESTROY_PROJECTILE = 11;
  S_GAMEOVER = 12;
}

message C_EnterRoom {
  string roomId = 1;
  string password = 2;
  string nickname = 3;
  int32 userId = 4;
}

message S_EnterRoom {

  EnterResult enterResult = 1;
  int32 playerCount = 2;
  repeated PlayerInfo playerInfos = 3;

  enum EnterResult {
    SUCCESS = 0;
    INVALID_ID = 1;
    ACCESS_DENIED = 2;
    ALREADY_IN_ROOM = 3;
  }

  message PlayerInfo {
    int32 userId = 1;
    int32 skinId = 2;
    int32 characterId = 3;
    string nickname = 4;
    SpawnPos spawnPos = 5;
  }
}

message SpawnPos {
    int32 x = 1;
    int32 y = 2;
}

message C_ReadyCompleteGame {
  int32 userId = 1;
}

message S_ReadyCompleteGame {
  google.protobuf.Timestamp startTime = 1;
}

message C_Move{
    int32 userId = 1;
    float dx = 2;
    float dy = 3;
}

message S_PositionUpdate{
    
    repeated PlayerPosUpdate playerPosUpdates = 1;

    message PlayerPosUpdate{
        int32 userId = 1;
        float x = 2;
        float y = 3;
        float vx = 4;
        float vy = 5;
    }
}

message C_Fire{
    float vx = 1;
    float vy = 2;
}

message S_Fire{
    float x = 1;
    float y = 2;
    float vx = 3;
    float vy = 4;

    ProjectileInfo projectileInfo = 5; 

    message ProjectileInfo{
        int32 type = 1;
        int32 damage = 2;
        int32 userId = 3;
        string team = 4;
        float speed = 5;
        int32 projectileId = 6;
    }
}

message S_Attack{
    int32 userId = 1;
    int32 hp = 2;
    int32 projectileId = 3;
}

message S_Die{
    int32 dieUserId = 1;
    int32 killUserId = 2;
    KillScore score = 3;

    message KillScore{
        int32 red = 1;
        int32 blue = 2;
    }
}

message S_DestroyProjectile{
    int32 projectileId = 1;
}

message S_Respawn{
    int32 userId = 1;
    SpawnPos spawnPos = 2;
}

message S_Gameover{
    int32 redScore = 1; 
    int32 blueScore = 2;
}
